{"interfaceLanguages":{"swift":[{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/instantiateerror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/instantiateerror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/instantiateerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/instantiateerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/instantiateerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/instantiateerror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/instantiateerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/instantiateerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/instantiateerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/instantiateerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/instantiateerror","title":"InstantiateError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/nilerror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/nilerror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/nilerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/nilerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/nilerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/nilerror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/nilerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/nilerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/nilerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/nilerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/nilerror","title":"NilError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/notfounderror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/notfounderror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/notfounderror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/notfounderror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/notfounderror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/notfounderror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/notfounderror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/notfounderror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/notfounderror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/notfounderror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/notfounderror","title":"NotFoundError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/typecastingerror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/typecastingerror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/typecastingerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/typecastingerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/typecastingerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/typecastingerror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/typecastingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/typecastingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/typecastingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/typecastingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/typecastingerror","title":"TypeCastingError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unauthorizederror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unauthorizederror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unauthorizederror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/unauthorizederror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unauthorizederror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/unauthorizederror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unauthorizederror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/unauthorizederror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unauthorizederror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/unauthorizederror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/unauthorizederror","title":"UnauthorizedError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unconfigurederror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unconfigurederror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unconfigurederror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/unconfigurederror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unconfigurederror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/unconfigurederror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unconfigurederror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/unconfigurederror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unconfigurederror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/unconfigurederror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/unconfigurederror","title":"UnconfiguredError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unimplementederror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unimplementederror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unimplementederror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/unimplementederror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unimplementederror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/unimplementederror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unimplementederror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/unimplementederror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unimplementederror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/unimplementederror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/unimplementederror","title":"UnimplementedError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unknownerror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unknownerror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unknownerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/unknownerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unknownerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/unknownerror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unknownerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/unknownerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unknownerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/unknownerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/unknownerror","title":"UnknownError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unsupportederror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unsupportederror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unsupportederror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/unsupportederror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unsupportederror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/unsupportederror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unsupportederror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/unsupportederror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/unsupportederror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/unsupportederror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/unsupportederror","title":"UnsupportedError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/validationerror\/init(fileid:filepath:file:function:line:column:message:)","title":"init(fileID: String, filePath: String, file: String, function: String, line: Int, column: Int, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/validationerror\/message","title":"let message: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/validationerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/errorkit\/validationerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/errorkit\/validationerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/errorkit\/validationerror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/errorkit\/validationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/errorkit\/validationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/errorkit\/validationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/errorkit\/validationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/errorkit\/validationerror","title":"ValidationError","type":"struct"}],"path":"\/documentation\/errorkit","title":"ErrorKit","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/sdsmealapiprovider\/init(session:zoneid:baseurl:)","title":"init(session: URLSession, zoneID: String, baseURL: URL?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/sdsmealapiprovider\/fetch(meal:stubvalue:)","title":"func fetch(meal: Meal, stubValue: (Data, URLResponse)?) async throws -> ([Category], HTTPURLResponse)","type":"method"}],"path":"\/documentation\/sdsmealapi\/sdsmealapiprovider","title":"SDSMealAPIProvider","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/category\/init(element:)","title":"init(element: Element) throws","type":"init"},{"path":"\/documentation\/sdsmealapi\/category\/init(id:menus:)","title":"init(id: String, menus: [Menu])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/category\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/sdsmealapi\/category\/menus","title":"var menus: [Menu]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/category\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sdsmealapi\/category\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/category\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdsmealapi\/category\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sdsmealapi\/category","title":"Category","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/close\/init(element:)","title":"init(element: Element) throws","type":"init"},{"path":"\/documentation\/sdsmealapi\/close\/init(message:localizedmessage:operatinghoursinformation:breakfastopeninghours:lunchopeninghours:dinneropeninghours:)","title":"init(message: String, localizedMessage: String, operatingHoursInformation: String, breakfastOpeningHours: String, lunchOpeningHours: String, dinnerOpeningHours: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/close\/breakfastopeninghours","title":"var breakfastOpeningHours: String","type":"property"},{"path":"\/documentation\/sdsmealapi\/close\/dinneropeninghours","title":"var dinnerOpeningHours: String","type":"property"},{"path":"\/documentation\/sdsmealapi\/close\/localizedmessage","title":"var localizedMessage: String","type":"property"},{"path":"\/documentation\/sdsmealapi\/close\/lunchopeninghours","title":"var lunchOpeningHours: String","type":"property"},{"path":"\/documentation\/sdsmealapi\/close\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/sdsmealapi\/close\/operatinghoursinformation","title":"var operatingHoursInformation: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/close\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sdsmealapi\/close\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/close\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdsmealapi\/close\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/close\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sdsmealapi\/close\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sdsmealapi\/close","title":"Close","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/dish\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/dish\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/dish\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sdsmealapi\/dish\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/dish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdsmealapi\/dish\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sdsmealapi\/dish","title":"Dish","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/menu\/init(element:)","title":"init(element: Element) throws","type":"init"},{"path":"\/documentation\/sdsmealapi\/menu\/init(name:dishes:calories:image:)","title":"init(name: String, dishes: [Dish], calories: Measurement<UnitEnergy>, image: URL?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/menu\/calories","title":"var calories: Measurement<UnitEnergy>","type":"property"},{"path":"\/documentation\/sdsmealapi\/menu\/dishes","title":"var dishes: [Dish]","type":"property"},{"path":"\/documentation\/sdsmealapi\/menu\/image","title":"var image: URL?","type":"property"},{"path":"\/documentation\/sdsmealapi\/menu\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/menu\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sdsmealapi\/menu\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/menu\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdsmealapi\/menu\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sdsmealapi\/menu","title":"Menu","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/meal\/breakfast","title":"case breakfast","type":"case"},{"path":"\/documentation\/sdsmealapi\/meal\/dinner","title":"case dinner","type":"case"},{"path":"\/documentation\/sdsmealapi\/meal\/lunch","title":"case lunch","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/meal\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/meal\/formattedopeninghoursstring","title":"var formattedOpeningHoursString: String","type":"property"},{"path":"\/documentation\/sdsmealapi\/meal\/openinghours","title":"var openingHours: DateInterval","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/meal\/current","title":"static var current: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/meal\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sdsmealapi\/meal\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/meal\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/meal\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sdsmealapi\/meal\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sdsmealapi\/meal\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sdsmealapi\/meal\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sdsmealapi\/meal","title":"Meal","type":"enum"}],"path":"\/documentation\/sdsmealapi","title":"SDSMealAPI","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/attribute\/init(key:value:)","title":"init(key: String, value: String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/attribute\/clone()","title":"func clone() -> Attribute","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/getkey()","title":"func getKey() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/getvalue()","title":"func getValue() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/hashcode()","title":"func hashCode() -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/html()","title":"func html() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/html(accum:out:)","title":"func html(accum: StringBuilder, out: OutputSettings)","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/isbooleanattribute()","title":"func isBooleanAttribute() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/isdataattribute()","title":"func isDataAttribute() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/setkey(key:)","title":"func setKey(key: String) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/setvalue(value:)","title":"func setValue(value: String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/shouldcollapseattribute(out:)","title":"func shouldCollapseAttribute(out: OutputSettings) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attribute\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/attribute\/createfromencoded(unencodedkey:encodedvalue:)","title":"static func createFromEncoded(unencodedKey: String, encodedValue: String) throws -> Attribute","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/attribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftsoup\/attribute\/==(_:_:)","title":"static func == (Attribute, Attribute) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/attribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/attribute","title":"Attribute","type":"class"},{"path":"\/documentation\/swiftsoup\/attributekey","title":"AttributeKey","type":"class"},{"path":"\/documentation\/swiftsoup\/attributevalue","title":"AttributeValue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/attributes\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/attributes\/addall(incoming:)","title":"func addAll(incoming: Attributes?)","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/aslist()","title":"func asList() -> [Attribute]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/clone()","title":"func clone() -> Attributes","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/dataset()","title":"func dataset() -> [String : String]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/equals(o:)","title":"func equals(o: AnyObject?) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/get(key:)","title":"func get(key: String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/getignorecase(key:)","title":"func getIgnoreCase(key: String) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/haskey(key:)","title":"func hasKey(key: String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/haskeyignorecase(key:)","title":"func hasKeyIgnoreCase(key: String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/html()","title":"func html() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/html(accum:out:)","title":"func html(accum: StringBuilder, out: OutputSettings) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/lowercaseallkeys()","title":"func lowercaseAllKeys()","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/put(_:_:)-50dyk","title":"func put(String, Bool) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/put(_:_:)-px3x","title":"func put(String, String) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/put(attribute:)","title":"func put(attribute: Attribute)","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/remove(key:)","title":"func remove(key: String) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/removeignorecase(key:)","title":"func removeIgnoreCase(key: String) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/size()","title":"func size() -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/tostring()","title":"func toString() throws -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/attributes\/dataprefix","title":"static var dataPrefix: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/attributes\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/swiftsoup\/attributes\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/swiftsoup\/attributes\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/attributes\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/flatmap(_:)-2g1jp","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/flatmap(_:)-5cz9t","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/makeiterator()","title":"func makeIterator() -> AnyIterator<Attribute>","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/sorted(using:)-179q3","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/sorted(using:)-5izto","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/attributes\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/swiftsoup\/attributes\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/attributes","title":"Attributes","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/booleanattribute\/isbooleanattribute()","title":"func isBooleanAttribute() -> Bool","type":"method"}],"path":"\/documentation\/swiftsoup\/booleanattribute","title":"BooleanAttribute","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/characterreader\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/characterreader\/advance()","title":"func advance()","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consume()","title":"func consume() -> UnicodeScalar","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumeasstring()","title":"func consumeAsString() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumedata()","title":"func consumeData() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumedigitsequence()","title":"func consumeDigitSequence() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumehexsequence()","title":"func consumeHexSequence() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumelettersequence()","title":"func consumeLetterSequence() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumeletterthendigitsequence()","title":"func consumeLetterThenDigitSequence() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumetagname()","title":"func consumeTagName() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumeto(_:)-6nlei","title":"func consumeTo(UnicodeScalar) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumeto(_:)-7mtub","title":"func consumeTo(String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumetoany(_:)-52sfp","title":"func consumeToAny([UnicodeScalar]) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumetoany(_:)-8wryw","title":"func consumeToAny(UnicodeScalar...) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumetoanysorted(_:)-4mu0c","title":"func consumeToAnySorted([UnicodeScalar]) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumetoanysorted(_:)-7pgxa","title":"func consumeToAnySorted(UnicodeScalar...) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/consumetoend()","title":"func consumeToEnd() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/containsignorecase(_:)","title":"func containsIgnoreCase(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/current()","title":"func current() -> UnicodeScalar","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/getpos()","title":"func getPos() -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/isempty()","title":"func isEmpty() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/markpos()","title":"func markPos()","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matchconsume(_:)","title":"func matchConsume(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matchconsumeignorecase(_:)","title":"func matchConsumeIgnoreCase(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matches(_:)","title":"func matches(UnicodeScalar) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matches(_:ignorecase:consume:)","title":"func matches(String, ignoreCase: Bool, consume: Bool) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matchesany(_:)-2du1","title":"func matchesAny(UnicodeScalar...) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matchesany(_:)-4sn4n","title":"func matchesAny([UnicodeScalar]) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matchesanysorted(_:)","title":"func matchesAnySorted([UnicodeScalar]) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matchesdigit()","title":"func matchesDigit() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matchesignorecase(_:)","title":"func matchesIgnoreCase(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/matchesletter()","title":"func matchesLetter() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/nextindexof(_:)-4v7xc","title":"func nextIndexOf(String) -> String.UnicodeScalarView.Index?","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/nextindexof(_:)-67tqg","title":"func nextIndexOf(UnicodeScalar) -> String.UnicodeScalarView.Index?","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/rewindtomark()","title":"func rewindToMark()","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/tostring()","title":"func toString() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/characterreader\/unconsume()","title":"func unconsume()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/characterreader\/eof","title":"static let EOF: UnicodeScalar","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/characterreader\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftsoup\/characterreader\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/characterreader","title":"CharacterReader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/cleaner\/init(_:)","title":"init(Whitelist)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/cleaner\/clean(_:)","title":"func clean(Document) throws -> Document","type":"method"},{"path":"\/documentation\/swiftsoup\/cleaner\/isvalid(_:)","title":"func isValid(Document) throws -> Bool","type":"method"}],"path":"\/documentation\/swiftsoup\/cleaner","title":"Cleaner","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/collector\/collect(_:_:)","title":"static func collect(Evaluator, Element) throws -> Elements","type":"method"}],"path":"\/documentation\/swiftsoup\/collector","title":"Collector","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/and\/init(_:)-1shxt","title":"init([Evaluator])","type":"init"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/and\/init(_:)-2iaiv","title":"init(Evaluator...)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/and\/matches(_:_:)","title":"func matches(Element, Element) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/and\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/combiningevaluator\/and","title":"CombiningEvaluator.And","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/or\/init(_:)","title":"init([Evaluator])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/or\/add(_:)","title":"func add(Evaluator)","type":"method"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/or\/matches(_:_:)","title":"func matches(Element, Element) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/or\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/combiningevaluator\/or","title":"CombiningEvaluator.Or","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/init(_:)-6yata","title":"init(Evaluator...)","type":"init"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/init(_:)-7gc2e","title":"init(Array<Evaluator>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/combiningevaluator\/evaluators","title":"var evaluators: Array<Evaluator>","type":"property"}],"path":"\/documentation\/swiftsoup\/combiningevaluator","title":"CombiningEvaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/comment\/init(_:_:)","title":"init(String, String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/comment\/copy(clone:parent:)","title":"func copy(clone: Node, parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/comment\/copy(parent:)","title":"func copy(parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/comment\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/comment\/getdata()","title":"func getData() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/comment\/nodename()","title":"func nodeName() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/comment","title":"Comment","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/cssselector\/select(_:_:)-234f","title":"static func select(String, Element) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/cssselector\/select(_:_:)-4ci9k","title":"static func select(String, Array<Element>) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/cssselector\/select(_:_:)-5vwp4","title":"static func select(Evaluator, Element) throws -> Elements","type":"method"}],"path":"\/documentation\/swiftsoup\/cssselector","title":"CssSelector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/datanode\/init(_:_:)","title":"init(String, String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/datanode\/copy(clone:parent:)","title":"func copy(clone: Node, parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/datanode\/copy(parent:)","title":"func copy(parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/datanode\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/datanode\/getwholedata()","title":"func getWholeData() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/datanode\/nodename()","title":"func nodeName() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/datanode\/setwholedata(_:)","title":"func setWholeData(String) -> DataNode","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/datanode\/createfromencoded(_:_:)","title":"static func createFromEncoded(String, String) throws -> DataNode","type":"method"}],"path":"\/documentation\/swiftsoup\/datanode","title":"DataNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/document\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/document\/body()","title":"func body() -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/charset()","title":"func charset() -> String.Encoding","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/charset(_:)","title":"func charset(String.Encoding) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/copy(clone:parent:)","title":"func copy(clone: Node, parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/copy(parent:)","title":"func copy(parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/createelement(_:)","title":"func createElement(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/head()","title":"func head() -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/location()","title":"func location() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/nodename()","title":"func nodeName() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/normalise()","title":"func normalise() throws -> Document","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/outerhtml()","title":"func outerHtml() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/outputsettings()","title":"func outputSettings() -> OutputSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/outputsettings(_:)","title":"func outputSettings(OutputSettings) -> Document","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/quirksmode()","title":"func quirksMode() -> Document.QuirksMode","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/quirksmode(_:)","title":"func quirksMode(Document.QuirksMode) -> Document","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/text(_:)","title":"func text(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/title()","title":"func title() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/title(_:)","title":"func title(String) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/updatemetacharsetelement()","title":"func updateMetaCharsetElement() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/document\/updatemetacharsetelement(_:)","title":"func updateMetaCharsetElement(Bool)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/document\/createshell(_:)","title":"static func createShell(String) -> Document","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/document\/quirksmode\/limitedquirks","title":"case limitedQuirks","type":"case"},{"path":"\/documentation\/swiftsoup\/document\/quirksmode\/noquirks","title":"case noQuirks","type":"case"},{"path":"\/documentation\/swiftsoup\/document\/quirksmode\/quirks","title":"case quirks","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/document\/quirksmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/document\/quirksmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/document\/quirksmode","title":"Document.QuirksMode","type":"enum"}],"path":"\/documentation\/swiftsoup\/document","title":"Document","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/documenttype\/init(_:_:_:_:)","title":"init(String, String, String, String)","type":"init"},{"path":"\/documentation\/swiftsoup\/documenttype\/init(_:_:_:_:_:)","title":"init(String, String?, String, String, String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/documenttype\/copy(clone:parent:)","title":"func copy(clone: Node, parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/documenttype\/copy(parent:)","title":"func copy(parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/documenttype\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/documenttype\/nodename()","title":"func nodeName() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/documenttype","title":"DocumentType","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/element\/init(_:_:)","title":"init(Tag, String)","type":"init"},{"path":"\/documentation\/swiftsoup\/element\/init(_:_:_:)","title":"init(Tag, String, Attributes)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/element\/addclass(_:)","title":"func addClass(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/after(_:)-77uiw","title":"func after(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/after(_:)-7dznz","title":"func after(Node) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/append(_:)","title":"func append(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/appendchild(_:)","title":"func appendChild(Node) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/appendelement(_:)","title":"func appendElement(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/appendtext(_:)","title":"func appendText(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/attr(_:_:)-1buqz","title":"func attr(String, String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/attr(_:_:)-7qr39","title":"func attr(String, Bool) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/before(_:)-12phm","title":"func before(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/before(_:)-753dg","title":"func before(Node) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/child(_:)","title":"func child(Int) -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/children()","title":"func children() -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/classname()","title":"func className() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/classnames()","title":"func classNames() throws -> OrderedSet<String>","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/classnames(_:)","title":"func classNames(OrderedSet<String>) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/copy(clone:parent:)","title":"func copy(clone: Node, parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/copy(parent:)","title":"func copy(parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/cssselector()","title":"func cssSelector() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/data()","title":"func data() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/datanodes()","title":"func dataNodes() -> Array<DataNode>","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/dataset()","title":"func dataset() -> Dictionary<String, String>","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/elementsiblingindex()","title":"func elementSiblingIndex() throws -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/empty()","title":"func empty() -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/firstelementsibling()","title":"func firstElementSibling() -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getallelements()","title":"func getAllElements() throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementbyid(_:)","title":"func getElementById(String) throws -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyattribute(_:)","title":"func getElementsByAttribute(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyattributestarting(_:)","title":"func getElementsByAttributeStarting(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyattributevalue(_:_:)","title":"func getElementsByAttributeValue(String, String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyattributevaluecontaining(_:_:)","title":"func getElementsByAttributeValueContaining(String, String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyattributevalueending(_:_:)","title":"func getElementsByAttributeValueEnding(String, String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyattributevaluematching(_:_:)-2tc9d","title":"func getElementsByAttributeValueMatching(String, String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyattributevaluematching(_:_:)-3yetj","title":"func getElementsByAttributeValueMatching(String, Pattern) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyattributevaluenot(_:_:)","title":"func getElementsByAttributeValueNot(String, String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyattributevaluestarting(_:_:)","title":"func getElementsByAttributeValueStarting(String, String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyclass(_:)","title":"func getElementsByClass(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyindexequals(_:)","title":"func getElementsByIndexEquals(Int) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyindexgreaterthan(_:)","title":"func getElementsByIndexGreaterThan(Int) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbyindexlessthan(_:)","title":"func getElementsByIndexLessThan(Int) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsbytag(_:)","title":"func getElementsByTag(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementscontainingowntext(_:)","title":"func getElementsContainingOwnText(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementscontainingtext(_:)","title":"func getElementsContainingText(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsmatchingowntext(_:)-3nacw","title":"func getElementsMatchingOwnText(Pattern) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsmatchingowntext(_:)-68lc2","title":"func getElementsMatchingOwnText(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsmatchingtext(_:)-3xl0","title":"func getElementsMatchingText(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/getelementsmatchingtext(_:)-zthm","title":"func getElementsMatchingText(Pattern) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/hasclass(_:)","title":"func hasClass(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/hastext()","title":"func hasText() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/html()","title":"func html() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/html(_:)-7crcu","title":"func html(StringBuilder) throws -> StringBuilder","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/html(_:)-9bsv3","title":"func html(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/is(_:)-8xx1n","title":"func iS(Evaluator) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/is(_:)-8xzna","title":"func iS(String) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/id()","title":"func id() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/insertchildren(_:_:)","title":"func insertChildren(Int, Array<Node>) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/isblock()","title":"func isBlock() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/lastelementsibling()","title":"func lastElementSibling() -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/nextelementsibling()","title":"func nextElementSibling() throws -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/nodename()","title":"func nodeName() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/owntext()","title":"func ownText() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/parent()","title":"func parent() -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/parents()","title":"func parents() -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/prepend(_:)","title":"func prepend(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/prependchild(_:)","title":"func prependChild(Node) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/prependelement(_:)","title":"func prependElement(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/prependtext(_:)","title":"func prependText(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/previouselementsibling()","title":"func previousElementSibling() throws -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/removeclass(_:)","title":"func removeClass(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/select(_:)","title":"func select(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/siblingelements()","title":"func siblingElements() -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/tag()","title":"func tag() -> Tag","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/tagname()","title":"func tagName() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/tagname(_:)","title":"func tagName(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/tagnamenormal()","title":"func tagNameNormal() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/text(_:)","title":"func text(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/text(trimandnormalisewhitespace:)","title":"func text(trimAndNormaliseWhitespace: Bool) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/textnodes()","title":"func textNodes() -> Array<TextNode>","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/toggleclass(_:)","title":"func toggleClass(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/val()","title":"func val() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/val(_:)","title":"func val(String) throws -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/element\/wrap(_:)","title":"func wrap(String) throws -> Element","type":"method"}],"path":"\/documentation\/swiftsoup\/element","title":"Element","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftsoup\/elements\/init(_:)-28ui1","title":"init(Array<Element>)","type":"init"},{"path":"\/documentation\/swiftsoup\/elements\/init(_:)-3y0ur","title":"init(OrderedSet<Element>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/add(_:)","title":"func add(Element)","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/add(_:_:)","title":"func add(Int, Element)","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/addclass(_:)","title":"func addClass(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/after(_:)","title":"func after(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/append(_:)","title":"func append(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/array()","title":"func array() -> Array<Element>","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/attr(_:)","title":"func attr(String) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/attr(_:_:)","title":"func attr(String, String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/before(_:)","title":"func before(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/eachtext()","title":"func eachText() throws -> Array<String>","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/empty()","title":"func empty() -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/eq(_:)","title":"func eq(Int) -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/first()","title":"func first() -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/forms()","title":"func forms() -> Array<FormElement>","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/get(_:)","title":"func get(Int) -> Element","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/hasattr(_:)","title":"func hasAttr(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/hasclass(_:)","title":"func hasClass(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/hastext()","title":"func hasText() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/html()","title":"func html() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/html(_:)","title":"func html(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/is(_:)","title":"func iS(String) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/isempty()","title":"func isEmpty() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/last()","title":"func last() -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/not(_:)","title":"func not(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/outerhtml()","title":"func outerHtml() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/parents()","title":"func parents() -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/prepend(_:)","title":"func prepend(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/remove()","title":"func remove() throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/removeattr(_:)","title":"func removeAttr(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/removeclass(_:)","title":"func removeClass(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/select(_:)","title":"func select(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/size()","title":"func size() -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/tagname(_:)","title":"func tagName(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/text(trimandnormalisewhitespace:)","title":"func text(trimAndNormaliseWhitespace: Bool) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/tostring()","title":"func toString() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/toggleclass(_:)","title":"func toggleClass(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/traverse(_:)","title":"func traverse(NodeVisitor) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/unwrap()","title":"func unwrap() throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/val()","title":"func val() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/val(_:)","title":"func val(String) throws -> Elements","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/wrap(_:)","title":"func wrap(String) throws -> Elements","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/swiftsoup\/elements\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/count-27vbm","title":"var count: Int","type":"property"},{"path":"\/documentation\/swiftsoup\/elements\/count-7wgq1","title":"var count: Int","type":"property"},{"path":"\/documentation\/swiftsoup\/elements\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/swiftsoup\/elements\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/swiftsoup\/elements\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/swiftsoup\/elements\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/swiftsoup\/elements\/underestimatedcount-7agm6","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/makeiterator()","title":"func makeIterator() -> ElementsIterator","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/map(_:)-13jep","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/subscript(_:)-2b59o","title":"subscript(Int) -> Element","type":"subscript"},{"path":"\/documentation\/swiftsoup\/elements\/subscript(_:)-8x8g8","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/swiftsoup\/elements\/subscript(_:)-99wjq","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/swiftsoup\/elements\/subscript(_:)-bmsv","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/swiftsoup\/elements\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftsoup\/elements\/==(_:_:)","title":"static func == (Elements, Elements) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/elements\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/swiftsoup\/elements\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/swiftsoup\/elements\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/swiftsoup\/elements\/underestimatedcount-7egiq","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elements\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/flatmap(_:)-29o9g","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/flatmap(_:)-xian","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/map(_:)-7eju4","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/sorted(using:)-4sbkv","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/sorted(using:)-9874c","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/elements\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/swiftsoup\/elements\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/elements","title":"Elements","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/entities\/escapemode\/==(_:_:)","title":"static func == (EscapeMode, EscapeMode) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/entities\/escapemode\/codepointforname(_:)","title":"func codepointForName(String) -> UnicodeScalar?","type":"method"},{"path":"\/documentation\/swiftsoup\/entities\/escapemode\/nameforcodepoint(_:)","title":"func nameForCodepoint(UnicodeScalar) -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/entities\/escapemode\/base","title":"static let base: EscapeMode","type":"property"},{"path":"\/documentation\/swiftsoup\/entities\/escapemode\/extended","title":"static let extended: EscapeMode","type":"property"},{"path":"\/documentation\/swiftsoup\/entities\/escapemode\/xhtml","title":"static let xhtml: EscapeMode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/entities\/escapemode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/entities\/escapemode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/entities\/escapemode","title":"Entities.EscapeMode","type":"class"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/entities\/codepointsforname(_:)","title":"static func codepointsForName(String) -> [UnicodeScalar]?","type":"method"},{"path":"\/documentation\/swiftsoup\/entities\/escape(_:_:)-2b923","title":"static func escape(String, String.Encoding) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/entities\/escape(_:_:)-iznu","title":"static func escape(String, OutputSettings) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/entities\/getbyname(name:)","title":"static func getByName(name: String) -> String?","type":"method"},{"path":"\/documentation\/swiftsoup\/entities\/isbasenamedentity(_:)","title":"static func isBaseNamedEntity(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/entities\/isnamedentity(_:)","title":"static func isNamedEntity(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/entities\/unescape(_:)","title":"static func unescape(String) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/entities\/unescape(string:strict:)","title":"static func unescape(string: String, strict: Bool) throws -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/entities","title":"Entities","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/allelements\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/allelements\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/allelements","title":"Evaluator.AllElements","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attribute\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attribute\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/attribute\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/attribute","title":"Evaluator.Attribute","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributekeypair\/init(_:_:)","title":"init(String, String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributekeypair\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/attributekeypair","title":"Evaluator.AttributeKeyPair","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributestarting\/init(_:)","title":"init(String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributestarting\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributestarting\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/attributestarting","title":"Evaluator.AttributeStarting","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvalue\/init(_:_:)","title":"init(String, String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvalue\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvalue\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvalue","title":"Evaluator.AttributeWithValue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluecontaining\/init(_:_:)","title":"init(String, String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluecontaining\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluecontaining\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluecontaining","title":"Evaluator.AttributeWithValueContaining","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvalueending\/init(_:_:)","title":"init(String, String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvalueending\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvalueending\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvalueending","title":"Evaluator.AttributeWithValueEnding","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluematching\/init(_:_:)","title":"init(String, Pattern)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluematching\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluematching\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluematching","title":"Evaluator.AttributeWithValueMatching","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluenot\/init(_:_:)","title":"init(String, String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluenot\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluenot\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluenot","title":"Evaluator.AttributeWithValueNot","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluestarting\/init(_:_:)","title":"init(String, String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluestarting\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluestarting\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/attributewithvaluestarting","title":"Evaluator.AttributeWithValueStarting","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/class\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/class\/matches(_:_:)","title":"func matches(Element, Element) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/class\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/class","title":"Evaluator.Class","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/containsowntext\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/containsowntext\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/containsowntext\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/containsowntext","title":"Evaluator.ContainsOwnText","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/containstext\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/containstext\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/containstext\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/containstext","title":"Evaluator.ContainsText","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/cssnthevaluator\/init(_:)","title":"init(Int)","type":"init"},{"path":"\/documentation\/swiftsoup\/evaluator\/cssnthevaluator\/init(_:_:)","title":"init(Int, Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/cssnthevaluator\/a","title":"let a: Int","type":"property"},{"path":"\/documentation\/swiftsoup\/evaluator\/cssnthevaluator\/b","title":"let b: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/cssnthevaluator\/calculateposition(_:_:)","title":"func calculatePosition(Element, Element) throws -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/cssnthevaluator\/getpseudoclass()","title":"func getPseudoClass() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/cssnthevaluator\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/cssnthevaluator\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/cssnthevaluator","title":"Evaluator.CssNthEvaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/id\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/id\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/id\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/id","title":"Evaluator.Id","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexequals\/init(_:)","title":"init(Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexequals\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexequals\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/indexequals","title":"Evaluator.IndexEquals","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexevaluator\/init(_:)","title":"init(Int)","type":"init"}],"path":"\/documentation\/swiftsoup\/evaluator\/indexevaluator","title":"Evaluator.IndexEvaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexgreaterthan\/init(_:)","title":"init(Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexgreaterthan\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexgreaterthan\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/indexgreaterthan","title":"Evaluator.IndexGreaterThan","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexlessthan\/init(_:)","title":"init(Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexlessthan\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/indexlessthan\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/indexlessthan","title":"Evaluator.IndexLessThan","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isempty\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/isempty\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isempty","title":"Evaluator.IsEmpty","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isfirstchild\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/isfirstchild\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isfirstchild","title":"Evaluator.IsFirstChild","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isfirstoftype\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isfirstoftype\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isfirstoftype","title":"Evaluator.IsFirstOfType","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/islastchild\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/islastchild\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/islastchild","title":"Evaluator.IsLastChild","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/islastoftype\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/islastoftype\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/islastoftype","title":"Evaluator.IsLastOfType","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthchild\/init(_:_:)","title":"init(Int, Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthchild\/calculateposition(_:_:)","title":"func calculatePosition(Element, Element) throws -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthchild\/getpseudoclass()","title":"func getPseudoClass() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isnthchild","title":"Evaluator.IsNthChild","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthlastchild\/init(_:_:)","title":"init(Int, Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthlastchild\/calculateposition(_:_:)","title":"func calculatePosition(Element, Element) throws -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthlastchild\/getpseudoclass()","title":"func getPseudoClass() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isnthlastchild","title":"Evaluator.IsNthLastChild","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthlastoftype\/init(_:_:)","title":"init(Int, Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthlastoftype\/calculateposition(_:_:)","title":"func calculatePosition(Element, Element) throws -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthlastoftype\/getpseudoclass()","title":"func getPseudoClass() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isnthlastoftype","title":"Evaluator.IsNthLastOfType","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthoftype\/init(_:_:)","title":"init(Int, Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthoftype\/calculateposition(_:_:)","title":"func calculatePosition(Element, Element) -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/isnthoftype\/getpseudoclass()","title":"func getPseudoClass() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isnthoftype","title":"Evaluator.IsNthOfType","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isonlychild\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/isonlychild\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isonlychild","title":"Evaluator.IsOnlyChild","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isonlyoftype\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/isonlyoftype\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isonlyoftype","title":"Evaluator.IsOnlyOfType","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/isroot\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/isroot\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/isroot","title":"Evaluator.IsRoot","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/matches\/init(_:)","title":"init(Pattern)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/matches\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/matches\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/matches","title":"Evaluator.Matches","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/matchesown\/init(_:)","title":"init(Pattern)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/matchesown\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/matchesown\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/matchesown","title":"Evaluator.MatchesOwn","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/tag\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/tag\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/tag\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/tag","title":"Evaluator.Tag","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/tagendswith\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/tagendswith\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/tagendswith\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator\/tagendswith","title":"Evaluator.TagEndsWith","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/evaluator\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/evaluator\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/evaluator","title":"Evaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/formelement\/init(_:_:_:)","title":"init(Tag, String, Attributes)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/formelement\/addelement(_:)","title":"func addElement(Element) -> FormElement","type":"method"},{"path":"\/documentation\/swiftsoup\/formelement\/copy(clone:parent:)","title":"func copy(clone: Node, parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/formelement\/copy(parent:)","title":"func copy(parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/formelement\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/formelement\/elements()","title":"func elements() -> Elements","type":"method"}],"path":"\/documentation\/swiftsoup\/formelement","title":"FormElement","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/matcher\/count","title":"var count: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/matcher\/find()","title":"func find() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/matcher\/group()","title":"func group() -> String?","type":"method"},{"path":"\/documentation\/swiftsoup\/matcher\/group(_:)","title":"func group(Int) -> String?","type":"method"}],"path":"\/documentation\/swiftsoup\/matcher","title":"Matcher","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/node\/==(_:_:)","title":"static func == (Node, Node) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/node\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftsoup\/node\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/swiftsoup\/node\/init(_:_:)","title":"init(String, Attributes)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/node\/siblingindex","title":"var siblingIndex: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/node\/absurl(_:)","title":"func absUrl(String) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/addchildren(_:)-29p5r","title":"func addChildren([Node]) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/addchildren(_:)-7nxnt","title":"func addChildren(Node...) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/addchildren(_:_:)-6zs6t","title":"func addChildren(Int, [Node]) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/addchildren(_:_:)-7yarm","title":"func addChildren(Int, Node...) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/addsiblinghtml(index:_:)","title":"func addSiblingHtml(index: Int, String) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/after(_:)-5p90v","title":"func after(Node) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/after(_:)-7luz3","title":"func after(String) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/after(html:)","title":"func after(html: String) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/after(node:)","title":"func after(node: Node) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/attr(_:)","title":"func attr(String) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/attr(_:_:)","title":"func attr(String, String) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/before(_:)-790ac","title":"func before(Node) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/before(_:)-8pl2i","title":"func before(String) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/childnode(_:)","title":"func childNode(Int) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/childnodesize()","title":"func childNodeSize() -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/childnodescopy()","title":"func childNodesCopy() -> Array<Node>","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/copy(clone:)","title":"func copy(clone: Node) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/copy(clone:parent:)","title":"func copy(clone: Node, parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/copy(parent:)","title":"func copy(parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/ensurechildnodes()","title":"func ensureChildNodes()","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/equals(_:)","title":"func equals(Node) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/getattributes()","title":"func getAttributes() -> Attributes?","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/getbaseuri()","title":"func getBaseUri() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/getchildnodes()","title":"func getChildNodes() -> Array<Node>","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/hasattr(_:)","title":"func hasAttr(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/hassamevalue(_:)","title":"func hasSameValue(Node) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/html(_:)","title":"func html(StringBuilder) throws -> StringBuilder","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/indent(_:_:_:)","title":"func indent(StringBuilder, Int, OutputSettings)","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/nextsibling()","title":"func nextSibling() -> Node?","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/nodename()","title":"func nodeName() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/outerhtml()","title":"func outerHtml() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/outerhtml(_:)","title":"func outerHtml(StringBuilder) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/ownerdocument()","title":"func ownerDocument() -> Document?","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/parent()","title":"func parent() -> Node?","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/previoussibling()","title":"func previousSibling() -> Node?","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/remove()","title":"func remove() throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/removeattr(_:)","title":"func removeAttr(String) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/removechild(_:)","title":"func removeChild(Node) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/reparentchild(_:)","title":"func reparentChild(Node) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/replacechild(_:_:)","title":"func replaceChild(Node, Node) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/replacewith(_:)","title":"func replaceWith(Node) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/setbaseuri(_:)","title":"func setBaseUri(String) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/setparentnode(_:)","title":"func setParentNode(Node) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/setsiblingindex(_:)","title":"func setSiblingIndex(Int)","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/siblingnodes()","title":"func siblingNodes() -> Array<Node>","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/traverse(_:)","title":"func traverse(NodeVisitor) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/unwrap()","title":"func unwrap() throws -> Node?","type":"method"},{"path":"\/documentation\/swiftsoup\/node\/wrap(_:)","title":"func wrap(String) throws -> Node?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/node\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftsoup\/node\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/node\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftsoup\/node\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/node\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/node\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/node","title":"Node","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/init()","title":"init()","type":"init"},{"path":"\/documentation\/swiftsoup\/orderedset\/init(arrayliteral:)","title":"init(arrayLiteral: T...)","type":"init"},{"path":"\/documentation\/swiftsoup\/orderedset\/init(sequence:)","title":"init<S>(sequence: S)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/swiftsoup\/orderedset\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/swiftsoup\/orderedset\/first","title":"var first: T?","type":"property"},{"path":"\/documentation\/swiftsoup\/orderedset\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/swiftsoup\/orderedset\/last","title":"var last: T?","type":"property"},{"path":"\/documentation\/swiftsoup\/orderedset\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/append(_:)","title":"func append(T)","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/append(contentsof:)","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/index(of:)","title":"func index(of: T) -> Index?","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/insert(_:at:)-4zhkk","title":"func insert(T, at: Index)","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/insert(_:at:)-7u46a","title":"func insert<S>(S, at: Index)","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/intersects(_:)","title":"func intersects<S>(S) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/issubset(of:)","title":"func isSubset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/moveobject(_:toindex:)","title":"func moveObject(T, toIndex: Index)","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/moveobject(at:to:)","title":"func moveObject(at: Index, to: Index)","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/remove(_:)-36q74","title":"func remove(T)","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/remove(_:)-9dg5t","title":"func remove<S>(S)","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/removeallobjects()","title":"func removeAllObjects()","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/removeobject(at:)","title":"func removeObject(at: Index)","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/swapobject(_:with:)","title":"func swapObject(T, with: T)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/subscript(_:)","title":"subscript(Index) -> T","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/index","title":"OrderedSet.Index","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftsoup\/orderedset\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/orderedset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/swiftsoup\/orderedset\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/swiftsoup\/orderedset\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/flatmap(_:)-46zqt","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/flatmap(_:)-95peq","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/joined(separator:)-5ekdw","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/joined(separator:)-6ts46","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/sorted(using:)-8ak1s","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/sorted(using:)-9xyqe","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/swiftsoup\/orderedset\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedset\/iterator","title":"OrderedSet.Iterator","type":"typealias"}],"path":"\/documentation\/swiftsoup\/orderedset\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/orderedset","title":"OrderedSet","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/outputsettings\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/outputsettings\/charset()","title":"func charset() -> String.Encoding","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/charset(_:)","title":"func charset(String.Encoding) -> OutputSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/encoder()","title":"func encoder() -> String.Encoding","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/encoder(_:)","title":"func encoder(String.Encoding) -> OutputSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/escapemode()","title":"func escapeMode() -> Entities.EscapeMode","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/escapemode(_:)","title":"func escapeMode(Entities.EscapeMode) -> OutputSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/indentamount()","title":"func indentAmount() -> UInt","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/indentamount(indentamount:)","title":"func indentAmount(indentAmount: UInt) -> OutputSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/outline()","title":"func outline() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/outline(outlinemode:)","title":"func outline(outlineMode: Bool) -> OutputSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/prettyprint()","title":"func prettyPrint() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/prettyprint(pretty:)","title":"func prettyPrint(pretty: Bool) -> OutputSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/syntax()","title":"func syntax() -> Syntax","type":"method"},{"path":"\/documentation\/swiftsoup\/outputsettings\/syntax(syntax:)","title":"func syntax(syntax: Syntax) -> OutputSettings","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/outputsettings\/syntax\/html","title":"case html","type":"case"},{"path":"\/documentation\/swiftsoup\/outputsettings\/syntax\/xml","title":"case xml","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/outputsettings\/syntax\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/outputsettings\/syntax\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/outputsettings\/syntax","title":"OutputSettings.Syntax","type":"enum"}],"path":"\/documentation\/swiftsoup\/outputsettings","title":"OutputSettings","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/parseerror\/geterrormessage()","title":"func getErrorMessage() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/parseerror\/getposition()","title":"func getPosition() -> Int","type":"method"},{"path":"\/documentation\/swiftsoup\/parseerror\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/parseerror","title":"ParseError","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/parseerrorlist\/add(_:)","title":"func add(ParseError)","type":"method"},{"path":"\/documentation\/swiftsoup\/parseerrorlist\/add(_:_:)","title":"func add(Int, ParseError)","type":"method"}],"path":"\/documentation\/swiftsoup\/parseerrorlist","title":"ParseErrorList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/parsesettings\/init(_:_:)","title":"init(Bool, Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/parsesettings\/normalizeattribute(_:)","title":"func normalizeAttribute(String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/parsesettings\/normalizeattributes(_:)","title":"func normalizeAttributes(Attributes) throws -> Attributes","type":"method"},{"path":"\/documentation\/swiftsoup\/parsesettings\/normalizetag(_:)","title":"func normalizeTag(String) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/parsesettings\/htmldefault","title":"static let htmlDefault: ParseSettings","type":"property"},{"path":"\/documentation\/swiftsoup\/parsesettings\/preservecase","title":"static let preserveCase: ParseSettings","type":"property"}],"path":"\/documentation\/swiftsoup\/parsesettings","title":"ParseSettings","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/parser\/geterrors()","title":"func getErrors() -> ParseErrorList","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/gettreebuilder()","title":"func getTreeBuilder() -> TreeBuilder","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/istrackerrors()","title":"func isTrackErrors() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/parseinput(_:_:)","title":"func parseInput(String, String) throws -> Document","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/settrackerrors(_:)","title":"func setTrackErrors(Int) -> Parser","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/settreebuilder(_:)","title":"func setTreeBuilder(TreeBuilder) -> Parser","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/settings()","title":"func settings() -> ParseSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/settings(_:)","title":"func settings(ParseSettings) -> Parser","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/parser\/htmlparser()","title":"static func htmlParser() -> Parser","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/parse(_:_:)","title":"static func parse(String, String) throws -> Document","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/parsebodyfragment(_:_:)","title":"static func parseBodyFragment(String, String) throws -> Document","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/parsebodyfragmentrelaxed(_:_:)","title":"static func parseBodyFragmentRelaxed(String, String) throws -> Document","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/parsefragment(_:_:_:)","title":"static func parseFragment(String, Element?, String) throws -> Array<Node>","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/parsexmlfragment(_:_:)","title":"static func parseXmlFragment(String, String) throws -> Array<Node>","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/unescapeentities(_:_:)","title":"static func unescapeEntities(String, Bool) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/parser\/xmlparser()","title":"static func xmlParser() -> Parser","type":"method"}],"path":"\/documentation\/swiftsoup\/parser","title":"Parser","type":"class"},{"path":"\/documentation\/swiftsoup\/protocol","title":"Protocol","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/queryparser\/parse()","title":"func parse() throws -> Evaluator","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/queryparser\/parse(_:)","title":"static func parse(String) throws -> Evaluator","type":"method"}],"path":"\/documentation\/swiftsoup\/queryparser","title":"QueryParser","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/simpledictionary\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/simpledictionary\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/swiftsoup\/simpledictionary\/values","title":"var values: SimpleDictionary<KeyType, ValueType>.DictionaryType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/simpledictionary\/contains(_:)","title":"func contains(KeyType) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/simpledictionary\/get(_:)","title":"func get(KeyType) -> ValueType?","type":"method"},{"path":"\/documentation\/swiftsoup\/simpledictionary\/put(_:forkey:)","title":"func put(ValueType, forKey: KeyType)","type":"method"},{"path":"\/documentation\/swiftsoup\/simpledictionary\/remove(_:)","title":"func remove(KeyType)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/simpledictionary\/dictionarytype","title":"SimpleDictionary.DictionaryType","type":"typealias"}],"path":"\/documentation\/swiftsoup\/simpledictionary","title":"SimpleDictionary","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/init(_:)","title":"init(Int)","type":"init"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/init(string:)","title":"init(string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/xlength","title":"var xlength: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/append(_:)-55ezd","title":"func append(String)","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/append(_:)-74twv","title":"func append(UnicodeScalar) -> StringBuilder","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/append(_:)-fulp","title":"func append<T>(T) -> StringBuilder","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/appendcodepoint(_:)-21f84","title":"func appendCodePoint(Character)","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/appendcodepoint(_:)-21p0m","title":"func appendCodePoint(Int)","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/appendcodepoint(_:)-94i5s","title":"func appendCodePoint(UnicodeScalar)","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/appendcodepoints(_:)-11v39","title":"func appendCodePoints([Character])","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/appendcodepoints(_:)-9n43w","title":"func appendCodePoints([UnicodeScalar])","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/appendline(_:)-37lem","title":"func appendLine(String) -> StringBuilder","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/appendline(_:)-mnw6","title":"func appendLine<T>(T) -> StringBuilder","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/clear()","title":"func clear() -> StringBuilder","type":"method"},{"path":"\/documentation\/swiftsoup\/stringbuilder\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/stringbuilder","title":"StringBuilder","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/stringutil\/appendnormalisedwhitespace(_:string:stripleading:)","title":"static func appendNormalisedWhitespace(StringBuilder, string: String, stripLeading: Bool)","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/isblank(_:)","title":"static func isBlank(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/isnumeric(_:)","title":"static func isNumeric(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/iswhitespace(_:)","title":"static func isWhitespace(Character) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/join(_:sep:)-2o9s2","title":"static func join(Set<String>, sep: String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/join(_:sep:)-4f1cj","title":"static func join([String], sep: String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/join(_:sep:)-7uexo","title":"static func join(OrderedSet<String>, sep: String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/normalisewhitespace(_:)","title":"static func normaliseWhitespace(String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/padding(_:)","title":"static func padding(Int) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/resolve(_:relurl:)-4crda","title":"static func resolve(URL, relUrl: String) -> URL?","type":"method"},{"path":"\/documentation\/swiftsoup\/stringutil\/resolve(_:relurl:)-7ma6k","title":"static func resolve(String, relUrl: String) -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/stringutil","title":"StringUtil","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/has\/init(_:)","title":"init(Evaluator)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/has\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/has\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/structuralevaluator\/has","title":"StructuralEvaluator.Has","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/immediateparent\/init(_:)","title":"init(Evaluator)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/immediateparent\/matches(_:_:)","title":"func matches(Element, Element) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/immediateparent\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/structuralevaluator\/immediateparent","title":"StructuralEvaluator.ImmediateParent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/not\/init(_:)","title":"init(Evaluator)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/not\/matches(_:_:)","title":"func matches(Element, Element) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/not\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/structuralevaluator\/not","title":"StructuralEvaluator.Not","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/parent\/init(_:)","title":"init(Evaluator)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/parent\/matches(_:_:)","title":"func matches(Element, Element) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/parent\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/structuralevaluator\/parent","title":"StructuralEvaluator.Parent","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/previoussibling\/init(_:)","title":"init(Evaluator)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/previoussibling\/matches(_:_:)","title":"func matches(Element, Element) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/previoussibling\/tostring()","title":"func toString() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/structuralevaluator\/previoussibling","title":"StructuralEvaluator.PreviousSibling","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/root\/matches(_:_:)","title":"func matches(Element, Element) -> Bool","type":"method"}],"path":"\/documentation\/swiftsoup\/structuralevaluator\/root","title":"StructuralEvaluator.Root","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/structuralevaluator\/init(_:)","title":"init(Evaluator)","type":"init"}],"path":"\/documentation\/swiftsoup\/structuralevaluator","title":"StructuralEvaluator","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/tag\/==(_:_:)","title":"static func == (Tag, Tag) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/tag\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/tag\/cancontainblock()","title":"func canContainBlock() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/equals(_:)","title":"func equals(Tag) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/formatasblock()","title":"func formatAsBlock() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/getname()","title":"func getName() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/getnamenormal()","title":"func getNameNormal() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/isblock()","title":"func isBlock() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/isdata()","title":"func isData() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/isempty()","title":"func isEmpty() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/isformlisted()","title":"func isFormListed() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/isformsubmittable()","title":"func isFormSubmittable() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/isinline()","title":"func isInline() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/isknowntag()","title":"func isKnownTag() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/isselfclosing()","title":"func isSelfClosing() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/preservewhitespace()","title":"func preserveWhitespace() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/tag\/isknowntag(_:)","title":"static func isKnownTag(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/valueof(_:)","title":"static func valueOf(String) throws -> Tag","type":"method"},{"path":"\/documentation\/swiftsoup\/tag\/valueof(_:_:)","title":"static func valueOf(String, ParseSettings) throws -> Tag","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/tag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/tag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/tag","title":"Tag","type":"class"},{"path":"\/documentation\/swiftsoup\/tagname","title":"TagName","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/textnode\/init(_:_:)","title":"init(String, String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/textnode\/absurl(_:)","title":"func absUrl(String) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/attr(_:)","title":"func attr(String) throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/attr(_:_:)","title":"func attr(String, String) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/copy(clone:parent:)","title":"func copy(clone: Node, parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/copy(parent:)","title":"func copy(parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/getattributes()","title":"func getAttributes() -> Attributes","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/getwholetext()","title":"func getWholeText() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/hasattr(_:)","title":"func hasAttr(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/isblank()","title":"func isBlank() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/nodename()","title":"func nodeName() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/removeattr(_:)","title":"func removeAttr(String) throws -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/splittext(_:)","title":"func splitText(Int) throws -> TextNode","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/text()","title":"func text() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/text(_:)","title":"func text(String) -> TextNode","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/textnode\/createfromencoded(_:_:)","title":"static func createFromEncoded(String, String) throws -> TextNode","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/lastchariswhitespace(_:)","title":"static func lastCharIsWhitespace(StringBuilder) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/normalisewhitespace(_:)","title":"static func normaliseWhitespace(String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/textnode\/stripleadingwhitespace(_:)","title":"static func stripLeadingWhitespace(String) -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/textnode","title":"TextNode","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/token\/reset()","title":"func reset() -> Token","type":"method"},{"path":"\/documentation\/swiftsoup\/token\/tostring()","title":"func toString() throws -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/token\/tokentype\/char","title":"case Char","type":"case"},{"path":"\/documentation\/swiftsoup\/token\/tokentype\/comment","title":"case Comment","type":"case"},{"path":"\/documentation\/swiftsoup\/token\/tokentype\/doctype","title":"case Doctype","type":"case"},{"path":"\/documentation\/swiftsoup\/token\/tokentype\/eof","title":"case EOF","type":"case"},{"path":"\/documentation\/swiftsoup\/token\/tokentype\/endtag","title":"case EndTag","type":"case"},{"path":"\/documentation\/swiftsoup\/token\/tokentype\/starttag","title":"case StartTag","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/token\/tokentype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/token\/tokentype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/token\/tokentype","title":"Token.TokenType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/token\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftsoup\/token\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/token","title":"Token","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/addfirst(_:)-45p4b","title":"func addFirst(String)","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/addfirst(_:)-45rub","title":"func addFirst(Character)","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/advance()","title":"func advance()","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/chompbalanced(_:_:)","title":"func chompBalanced(Character, Character) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/chompto(_:)","title":"func chompTo(String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/chomptoignorecase(_:)","title":"func chompToIgnoreCase(String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consume()","title":"func consume() -> Character","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consume(_:)","title":"func consume(String) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumeattributekey()","title":"func consumeAttributeKey() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumecssidentifier()","title":"func consumeCssIdentifier() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumeelementselector()","title":"func consumeElementSelector() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumetagname()","title":"func consumeTagName() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumeto(_:)","title":"func consumeTo(String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumetoany(_:)-7qex1","title":"func consumeToAny([String]) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumetoany(_:)-8gqtl","title":"func consumeToAny(String...) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumetoignorecase(_:)","title":"func consumeToIgnoreCase(String) -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumewhitespace()","title":"func consumeWhitespace() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/consumeword()","title":"func consumeWord() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/isempty()","title":"func isEmpty() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/matchchomp(_:)","title":"func matchChomp(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/matches(_:)","title":"func matches(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/matchesany(_:)-3a3fl","title":"func matchesAny([String]) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/matchesany(_:)-6dncr","title":"func matchesAny(Character...) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/matchesany(_:)-862xn","title":"func matchesAny(String...) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/matchescs(_:)","title":"func matchesCS(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/matchesstarttag()","title":"func matchesStartTag() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/matcheswhitespace()","title":"func matchesWhitespace() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/matchesword()","title":"func matchesWord() -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/peek()","title":"func peek() -> Character","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/remainder()","title":"func remainder() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/tokenqueue\/unescape(_:)","title":"static func unescape(String) -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/tokenqueue","title":"TokenQueue","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/tokeniserstatevars\/nullscalr","title":"static let nullScalr: UnicodeScalar","type":"property"}],"path":"\/documentation\/swiftsoup\/tokeniserstatevars","title":"TokeniserStateVars","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/treebuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/treebuilder\/baseuri","title":"var baseUri: String","type":"property"},{"path":"\/documentation\/swiftsoup\/treebuilder\/currenttoken","title":"var currentToken: Token?","type":"property"},{"path":"\/documentation\/swiftsoup\/treebuilder\/doc","title":"var doc: Document","type":"property"},{"path":"\/documentation\/swiftsoup\/treebuilder\/errors","title":"var errors: ParseErrorList","type":"property"},{"path":"\/documentation\/swiftsoup\/treebuilder\/reader","title":"var reader: CharacterReader","type":"property"},{"path":"\/documentation\/swiftsoup\/treebuilder\/settings","title":"var settings: ParseSettings","type":"property"},{"path":"\/documentation\/swiftsoup\/treebuilder\/stack","title":"var stack: Array<Element>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/treebuilder\/currentelement()","title":"func currentElement() -> Element?","type":"method"},{"path":"\/documentation\/swiftsoup\/treebuilder\/defaultsettings()","title":"func defaultSettings() -> ParseSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/treebuilder\/initialiseparse(_:_:_:_:)","title":"func initialiseParse(String, String, ParseErrorList, ParseSettings)","type":"method"},{"path":"\/documentation\/swiftsoup\/treebuilder\/process(_:)","title":"func process(Token) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/treebuilder\/processendtag(_:)","title":"func processEndTag(String) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/treebuilder\/processstarttag(_:)","title":"func processStartTag(String) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/treebuilder\/processstarttag(_:_:)","title":"func processStartTag(String, Attributes) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/treebuilder\/runparser()","title":"func runParser() throws","type":"method"}],"path":"\/documentation\/swiftsoup\/treebuilder","title":"TreeBuilder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/typedvalue\/tostring()","title":"func toString() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/typedvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/typedvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/typedvalue\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftsoup\/typedvalue\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/typedvalue","title":"TypedValue","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/whitelist\/addattributes(_:_:)","title":"func addAttributes(String, String...) throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/addenforcedattribute(_:_:_:)","title":"func addEnforcedAttribute(String, String, String) throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/addprotocols(_:_:_:)","title":"func addProtocols(String, String, String...) throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/addtags(_:)","title":"func addTags(String...) throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/getenforcedattributes(_:)","title":"func getEnforcedAttributes(String) throws -> Attributes","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/issafeattribute(_:_:_:)","title":"func isSafeAttribute(String, Element, Attribute) throws -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/issafetag(_:)","title":"func isSafeTag(String) -> Bool","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/preserverelativelinks(_:)","title":"func preserveRelativeLinks(Bool) -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/removeattributes(_:_:)","title":"func removeAttributes(String, String...) throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/removeenforcedattribute(_:_:)","title":"func removeEnforcedAttribute(String, String) throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/removeprotocols(_:_:_:)","title":"func removeProtocols(String, String, String...) throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/removetags(_:)","title":"func removeTags(String...) throws -> Whitelist","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/whitelist\/basic()","title":"static func basic() throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/basicwithimages()","title":"static func basicWithImages() throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/none()","title":"static func none() -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/relaxed()","title":"static func relaxed() throws -> Whitelist","type":"method"},{"path":"\/documentation\/swiftsoup\/whitelist\/simpletext()","title":"static func simpleText() throws -> Whitelist","type":"method"}],"path":"\/documentation\/swiftsoup\/whitelist","title":"Whitelist","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/xmldeclaration\/init(_:_:_:)","title":"init(String, String, Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/xmldeclaration\/copy(clone:parent:)","title":"func copy(clone: Node, parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/xmldeclaration\/copy(parent:)","title":"func copy(parent: Node?) -> Node","type":"method"},{"path":"\/documentation\/swiftsoup\/xmldeclaration\/copy(with:)","title":"func copy(with: NSZone?) -> Any","type":"method"},{"path":"\/documentation\/swiftsoup\/xmldeclaration\/getwholedeclaration()","title":"func getWholeDeclaration() throws -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/xmldeclaration\/name()","title":"func name() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/xmldeclaration\/nodename()","title":"func nodeName() -> String","type":"method"}],"path":"\/documentation\/swiftsoup\/xmldeclaration","title":"XmlDeclaration","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/xmltreebuilder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/xmltreebuilder\/defaultsettings()","title":"func defaultSettings() -> ParseSettings","type":"method"},{"path":"\/documentation\/swiftsoup\/xmltreebuilder\/initialiseparse(_:_:_:_:)","title":"func initialiseParse(String, String, ParseErrorList, ParseSettings)","type":"method"},{"path":"\/documentation\/swiftsoup\/xmltreebuilder\/parse(_:_:)","title":"func parse(String, String) throws -> Document","type":"method"},{"path":"\/documentation\/swiftsoup\/xmltreebuilder\/process(_:)","title":"func process(Token) throws -> Bool","type":"method"}],"path":"\/documentation\/swiftsoup\/xmltreebuilder","title":"XmlTreeBuilder","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/nodevisitor\/head(_:_:)","title":"func head(Node, Int) throws","type":"method"},{"path":"\/documentation\/swiftsoup\/nodevisitor\/tail(_:_:)","title":"func tail(Node, Int) throws","type":"method"}],"path":"\/documentation\/swiftsoup\/nodevisitor","title":"NodeVisitor","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/elementsiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/swiftsoup\/elementsiterator","title":"ElementsIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedsetgenerator\/init(set:)","title":"init(set: OrderedSet<T>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedsetgenerator\/next()","title":"func next() -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/orderedsetgenerator\/element","title":"OrderedSetGenerator.Element","type":"typealias"}],"path":"\/documentation\/swiftsoup\/orderedsetgenerator","title":"OrderedSetGenerator","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/pattern\/matcher(in:)","title":"func matcher(in: String) -> Matcher","type":"method"},{"path":"\/documentation\/swiftsoup\/pattern\/tostring()","title":"func toString() -> String","type":"method"},{"path":"\/documentation\/swiftsoup\/pattern\/validate()","title":"func validate() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/pattern\/case_insensitive","title":"static let CASE_INSENSITIVE: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/pattern\/compile(_:)","title":"static func compile(String) -> Pattern","type":"method"},{"path":"\/documentation\/swiftsoup\/pattern\/compile(_:_:)","title":"static func compile(String, Int) -> Pattern","type":"method"}],"path":"\/documentation\/swiftsoup\/pattern","title":"Pattern","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/clean(_:_:)","title":"func clean(String, Whitelist) throws -> String?","type":"func"},{"path":"\/documentation\/swiftsoup\/clean(_:_:_:)","title":"func clean(String, String, Whitelist) throws -> String?","type":"func"},{"path":"\/documentation\/swiftsoup\/clean(_:_:_:_:)","title":"func clean(String, String, Whitelist, OutputSettings) throws -> String?","type":"func"},{"path":"\/documentation\/swiftsoup\/isvalid(_:_:)","title":"func isValid(String, Whitelist) throws -> Bool","type":"func"},{"path":"\/documentation\/swiftsoup\/parse(_:)","title":"func parse(String) throws -> Document","type":"func"},{"path":"\/documentation\/swiftsoup\/parse(_:_:)","title":"func parse(String, String) throws -> Document","type":"func"},{"path":"\/documentation\/swiftsoup\/parse(_:_:_:)","title":"func parse(String, String, Parser) throws -> Document","type":"func"},{"path":"\/documentation\/swiftsoup\/parsebodyfragment(_:)","title":"func parseBodyFragment(String) throws -> Document","type":"func"},{"path":"\/documentation\/swiftsoup\/parsebodyfragment(_:_:)","title":"func parseBodyFragment(String, String) throws -> Document","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/+(_:_:)-1r725","title":"func + <T, S>(OrderedSet<T>, S) -> OrderedSet<T>","type":"op"},{"path":"\/documentation\/swiftsoup\/+(_:_:)-4ze2g","title":"func + (StringBuilder, StringBuilder) -> StringBuilder","type":"op"},{"path":"\/documentation\/swiftsoup\/+=(_:_:)-3thxu","title":"func += <T>(StringBuilder, T)","type":"op"},{"path":"\/documentation\/swiftsoup\/+=(_:_:)-4brq","title":"func += (StringBuilder, String)","type":"op"},{"path":"\/documentation\/swiftsoup\/+=(_:_:)-5012z","title":"func += <T, S>(inout OrderedSet<T>, S)","type":"op"},{"path":"\/documentation\/swiftsoup\/-(_:_:)","title":"func - <T, S>(OrderedSet<T>, S) -> OrderedSet<T>","type":"op"},{"path":"\/documentation\/swiftsoup\/-=(_:_:)","title":"func -= <T, S>(inout OrderedSet<T>, S)","type":"op"},{"path":"\/documentation\/swiftsoup\/==(_:_:)-7h2ns","title":"func == (TypedValue, TypedValue) -> Bool","type":"op"},{"path":"\/documentation\/swiftsoup\/==(_:_:)-99mm8","title":"func == <T>(OrderedSet<T>, OrderedSet<T>) -> Bool","type":"op"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/exception\/error(type:message:)","title":"case Error(type: ExceptionType, Message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/exception\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/swiftsoup\/exception\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/exception","title":"Exception","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/exceptiontype\/clonenotsupportedexception","title":"case CloneNotSupportedException","type":"case"},{"path":"\/documentation\/swiftsoup\/exceptiontype\/ioexception","title":"case IOException","type":"case"},{"path":"\/documentation\/swiftsoup\/exceptiontype\/illegalargumentexception","title":"case IllegalArgumentException","type":"case"},{"path":"\/documentation\/swiftsoup\/exceptiontype\/malformedurlexception","title":"case MalformedURLException","type":"case"},{"path":"\/documentation\/swiftsoup\/exceptiontype\/selectorparseexception","title":"case SelectorParseException","type":"case"},{"path":"\/documentation\/swiftsoup\/exceptiontype\/xmldeclaration","title":"case XmlDeclaration","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftsoup\/exceptiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftsoup\/exceptiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftsoup\/exceptiontype","title":"ExceptionType","type":"enum"}],"path":"\/documentation\/swiftsoup","title":"SwiftSoup","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}